void helper(TreeNode*root, map<int,vector<pair<int,int>>>&m,int hd,int dep)
{
  if(root==NULL)
      return;
    m[hd].push_back(make_pair(dep,root->val));
    helper(root->left,m,hd-1,dep+1);
    helper(root->right,m,hd+1,dep+1);
}
class Solution {
public:
    vector<vector<int>> verticalTraversal(TreeNode* root) {
        map<int,vector<pair<int,int>>>m;
        vector<vector<int>>vec;
        if(root==NULL)
            return vec;
        helper(root,m,0,0);
        for(auto it=m.begin();it!=m.end();it++)
        {
            vector<pair<int,int>>v=it->second;
            sort(v.begin(),v.end());
            vector<int>v1;
            for(int i=0;i<v.size();i++)
                v1.push_back(v[i].second);
            vec.push_back(v1);
        }
        return vec;
    }
};
